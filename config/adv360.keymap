#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        #include "macros.dtsi"
      #include "version.dtsi"
      #ifndef VERSION_MACRO

        macro_ver: macro_ver {
            compatible = "zmk,behavior-macro";
            label = "macro_version";
            #binding-cells = <0>;
            bindings = <&kp RET>;
        };

        #endif

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <280>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };

        backspace_delete: backspace_delete {
            compatible = "zmk,behavior-mod-morph";
            label = "BACKSPACE_DELETE";
            bindings = <&kp BACKSPACE>, <&kp DEL>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_RSFT)>;
        };

        home_row: home_row {
            compatible = "zmk,behavior-hold-tap";
            label = "HOME_ROW";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            flavor = "balanced";
            quick-tap-ms = <125>;
        };

        mo_backspace: mo_backspace {
            compatible = "zmk,behavior-hold-tap";
            label = "MO_BACKSPACE";
            bindings = <&mo>, <&backspace_delete>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            flavor = "tap-preferred";
            quick-tap-ms = <200>;
            require-prior-idle-ms = <125>;
        };

        mo_space: mo_space {
            compatible = "zmk,behavior-hold-tap";
            label = "MO_SPACE";
            bindings = <&mo>, <&backspace_delete>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            flavor = "tap-preferred";
            quick-tap-ms = <200>;
            require-prior-idle-ms = <125>;
        };

        mod_backspace_mo: mod_backspace_mo {
            compatible = "zmk,behavior-mod-morph";
            label = "MOD_BACKSPACE_MO";
            bindings = <&mo 3>, <&kp BACKSPACE>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_RSFT)>;
        };
    };

    macros {
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
&kp EQUAL       &kp N1            &kp N2    &kp N3    &kp N4     &kp N5  &tog 4                                                                                                     &mo 1      &kp N6  &kp N7  &kp N8     &kp N9    &kp N0                             &kp MINUS
&kp TAB         &kp Q             &kp W     &kp E     &kp R      &kp T   &none                                                                                                      &none      &kp Y   &kp U   &kp I      &kp O     &kp P                              &kp BSLH
&kp ESCAPE      &kp A             &kp S     &kp D     &kp F      &kp G   &none   &mt LEFT_ALT F2  &kp F4                            &kp F3         &mt RIGHT_ALT F1                 &none      &kp H   &kp J   &kp K      &kp L     &home_row RIGHT_COMMAND SEMICOLON  &kp SQT
&kp LEFT_SHIFT  &kp Z             &kp X     &kp C     &kp V      &kp B                            &kp LC(LEFT_ALT)                  &kp RIGHT_ALT                                              &kp N   &kp M   &kp COMMA  &kp DOT   &kp FSLH                           &kp RIGHT_SHIFT
&mo 3           &kp LEFT_CONTROL  &kp LGUI  &kp LEFT  &kp RIGHT          &mo 3   &kp LEFT_GUI     &home_row LEFT_CONTROL LC(B)      &kp RIGHT_GUI  &mt RS(RA(RC(RIGHT_GUI))) ENTER  &kp SPACE          &kp UP  &kp DOWN   &kp LBKT  &kp RBKT                           &mo 2
            >;
        };

        mod {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none                                                  &trans                  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &bootloader                                            &bootloader             &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &none        &none  &none      &bt BT_CLR  &none       &rgb_ug RGB_MEFS_CMD 5  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &macro_ver    &none                             &none      &none                                           &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none                       &none        &none  &none      &none       &bl BL_TOG  &rgb_ug RGB_TOG                &bl BL_INC  &bl BL_DEC  &none  &none  &none
            >;
        };

        fn {
            bindings = <
&kp F1   &kp F2   &kp F3   &kp F4   &kp F5   &kp F6   &tog 4                                              &mo 1   &kp F7  &kp F8           &kp F9             &kp F10   &kp F11         &kp F12
&kp F7   &kp F8   &kp F9   &kp F10  &kp F11  &kp F12  &none                                               &none   &trans  &trans           &trans             &trans    &trans          &trans
&kp F13  &kp F14  &kp F15  &kp F16  &kp F17  &kp F18  &none   &trans   &trans      &trans  &kp PAGE_DOWN  &none   &trans  &trans           &trans             &trans    &trans          &trans
&trans   &trans   &trans   &trans   &trans   &trans                    &trans      &trans                         &trans  &trans           &trans             &trans    &kp UP_ARROW    &trans
&trans   &trans   &kp F1   &kp F2   &kp F3            &trans  &kp DEL  &trans      &trans  &trans         &trans          &kp C_VOLUME_UP  &kp C_VOLUME_DOWN  &kp LEFT  &kp DOWN_ARROW  &kp RIGHT
            >;
        };

        symbol {
            bindings = <
&kp TILDE  &kp LG(F1)  &kp LG(F2)  &kp LG(F3)  &kp LG(F4)  &kp LG(F5)  &kp LG(F6)                                                                                                             &kp F7                        &kp F8     &kp F9     &kp F10               &kp F11                &kp F12  &kp BACKSPACE
&kp GRAVE  &kp LG(Q)   &trans      &trans      &kp LG(R)   &kp LG(T)   &kp LS(LA(LC(LG(NUMBER_4))))                                                                                           &kp RS(RC(RA(RG(NUMBER_6))))  &trans     &trans     &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans   &kp DELETE
&kp CARET  &kp LG(A)   &kp LG(S)   &kp LG(D)   &kp LG(F)   &trans      &kp LC(F9)                    &trans  &trans      &kp LS(LA(LC(LG(LEFT_BRACKET))))  &kp RS(RA(RC(RG(RIGHT_BRACKET))))  &kp RC(F12)                   &kp LG(H)  &trans     &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &trans   &kp DOLLAR
&trans     &kp LG(Z)   &kp LG(X)   &kp LG(C)   &kp LG(V)   &trans                                            &trans      &trans                                                                                             &trans     &trans     &trans                &trans                 &trans   &trans
&trans     &trans      &kp F1      &kp F2      &kp F3                  &trans                        &trans  &trans      &trans                            &trans                             &kp LG(SPACE)                            &kp PG_UP  &kp PAGE_DOWN         &trans                 &trans   &trans
            >;
        };

        keypad {
            bindings = <
&kp EQUAL  &kp N1     &kp N2    &kp N3    &kp N4     &kp N5  &trans                                                   &mo 1      &kp N6  &kp KP_NUM  &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY  &kp MINUS
&kp TAB    &kp Q      &kp W     &kp E     &kp R      &kp T   &none                                                    &none      &kp Y   &kp KP_N7   &kp KP_N8     &kp KP_N9      &kp KP_MINUS     &kp BSLH
&kp ESC    &kp A      &kp S     &kp D     &kp F      &kp G   &none     &kp LCTRL  &kp LALT      &kp LGUI   &kp RCTRL  &none      &kp H   &kp KP_N4   &kp KP_N5     &kp KP_N6      &kp KP_PLUS      &kp SQT
&kp LSHFT  &kp Z      &kp X     &kp C     &kp V      &kp B                        &kp HOME      &kp PG_UP                        &kp N   &kp KP_N1   &kp KP_N2     &kp KP_N3      &kp KP_ENTER     &kp RSHFT
&mo 3      &kp GRAVE  &kp CAPS  &kp LEFT  &kp RIGHT          &kp BSPC  &kp DEL    &kp END       &kp PG_DN  &kp ENTER  &kp KP_N0          &kp UP      &kp DOWN      &kp KP_DOT     &kp RBKT         &mo 3
            >;
        };
    };
};
