#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        #include "macros.dtsi"
      #include "version.dtsi"
      #ifndef VERSION_MACRO

        tmux: tmux {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to 2 &kp F2>;
            label = "TMUX";
        };

        intellij: intellij {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to 1 &kp F3>;
            label = "INTELLIJ";
        };

        chrome: chrome {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to 0 &kp F1>;
            label = "CHROME";
        };

        discord: discord {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to 0 &kp F4>;
            label = "DISCORD";
        };

        #endif

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;

            quick-tap-ms = <150>;
            hold-trigger-on-release;
        };

        backspace_delete: backspace_delete {
            compatible = "zmk,behavior-mod-morph";
            label = "BACKSPACE_DELETE";
            bindings = <&kp BACKSPACE>, <&kp DEL>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_RSFT)>;
        };

        home_row: home_row {
            compatible = "zmk,behavior-hold-tap";
            label = "HOME_ROW";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "balanced";
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
        };

        mo_tap: mo_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "MO_TAP";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <300>;
            flavor = "tap-preferred";
            quick-tap-ms = <150>;
            require-prior-idle-ms = <125>;
            hold-trigger-on-release;
        };

        mo_bspace: mo_bspace {
            compatible = "zmk,behavior-hold-tap";
            label = "MO_BSPACE";
            bindings = <&mo>, <&backspace_delete>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
            quick-tap-ms = <150>;
            hold-trigger-on-release;
        };

        mod_backspace_mo: mod_backspace_mo {
            compatible = "zmk,behavior-mod-morph";
            label = "MOD_BACKSPACE_MO";
            bindings = <&mo 0>, <&kp BACKSPACE>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_RSFT)>;
        };

        hold_kp_tap_sl: hold_kp_tap_sl {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_KP_TAP_SL";
            bindings = <&kp>, <&sl>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "hold-preferred";
            quick-tap-ms = <150>;
            hold-trigger-on-release;
        };

        cmd_mo: cmd_mo {
            compatible = "zmk,behavior-tap-dance";
            label = "CMD_MO";
            #binding-cells = <0>;
            bindings = <&home_row LEFT_GUI BACKSPACE>, <&sl 0>;

            tapping-term-ms = <200>;
        };

        spc_bkspc: spc_bkspc {
            compatible = "zmk,behavior-mod-morph";
            label = "SPC_BKSPC";
            bindings = <&kp SPACE>, <&kp BACKSPACE>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    macros {
    };

    combos { compatible = "zmk,combos"; };

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
&kp EQUAL                      &kp N1  &kp N2        &kp N3    &kp N4     &kp N5  &none                                                                                    &mo 5      &kp N6  &kp N7  &kp N8     &kp N9    &kp N0               &kp MINUS
&kp TAB                        &kp Q   &kp W         &kp E     &kp R      &kp T   &none                                                                                    &none      &kp Y   &kp U   &kp I      &kp O     &kp P                &kp BACKSLASH
&home_row LEFT_CONTROL ESCAPE  &kp A   &kp S         &kp D     &kp F      &kp G   &none         &tmux          &discord          &intellij                      &chrome    &none      &kp H   &kp J   &kp K      &kp L     &mo_tap 3 SEMICOLON  &kp SQT
&kp LEFT_SHIFT                 &kp Z   &kp X         &kp C     &kp V      &kp B                                &kp LEFT_ALT      &kp LG(LA(LS(RIGHT_CONTROL)))                        &kp N   &kp M   &kp COMMA  &kp DOT   &kp FSLH             &kp RIGHT_SHIFT
&mo 3                          &mo 4   &kp LEFT_ALT  &kp LEFT  &kp RIGHT          &kp LEFT_GUI  &kp BACKSPACE  &mo 3             &mo 4                          &kp ENTER  &kp SPACE          &kp UP  &kp DOWN   &kp LBKT  &kp RBKT             &mo 3
            >;
        };

        intellij {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                      &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                      &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans      &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans      &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans
            >;
        };

        tmux {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                         &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                         &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans      &trans     &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans      &trans                     &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans      &kp LC(B)  &trans  &trans          &trans  &trans  &trans  &trans  &trans
            >;
        };

        symbol {
            bindings = <
&kp TILDE  &kp F1                &kp F2          &kp F3         &kp F4            &kp F5  &none                                           &none      &kp F6        &kp F7             &kp F8            &kp F9            &kp F10                &kp BACKSPACE
&kp GRAVE  &kp LEFT_PARENTHESIS  &kp LEFT_BRACE  &kp LESS_THAN  &kp LEFT_BRACKET  &none   &none                                           &none      &trans        &kp RIGHT_BRACKET  &kp GREATER_THAN  &kp RIGHT_BRACE   &kp RIGHT_PARENTHESIS  &kp DEL
&kp CARET  &kp NUMBER_1          &kp NUMBER_2    &kp NUMBER_3   &kp NUMBER_4      &kp N5  &kp LG(C)  &trans   &trans      &trans  &trans  &kp LG(V)  &kp NUMBER_6  &kp N7             &kp N8            &kp N9            &kp N0                 &kp DOLLAR
&none      &trans                &trans          &trans         &trans            &trans                      &trans      &trans                     &trans        &trans             &kp LESS_THAN     &kp GREATER_THAN  &kp UP_ARROW           &none
&none      &trans                &trans          &trans         &trans                    &trans     &kp DEL  &trans      &trans  &trans  &trans                   &trans             &trans            &kp LEFT          &kp DOWN               &kp RIGHT
            >;
        };

        aerospace {
            bindings = <
&kp TILDE  &kp LG(LC(NUMBER_1))  &kp LG(LC(NUMBER_2))  &kp LC(LG(NUMBER_3))  &kp LG(LC(NUMBER_4))  &kp LG(LC(N5))  &none                                  &none              &kp LG(LC(LS(NUMBER_1)))  &kp LG(LC(LS(NUMBER_2)))  &kp LC(LS(LG(NUMBER_3)))  &kp LG(LC(LS(NUMBER_4)))  &kp LG(LC(LS(N5)))         &none
&kp GRAVE  &none                 &none                 &none                 &none                 &none           &none                                  &kp LG(LC(COMMA))  &kp LG(LC(LS(H)))         &kp LG(LC(LS(J)))         &kp LG(LC(LS(K)))         &kp LG(LC(LS(L)))         &none                      &none
&none      &none                 &none                 &none                 &kp LG(LC(F))         &none           &none  &none  &none      &none  &none  &kp LG(LC(SLASH))  &kp LG(LC(H))             &kp LC(LG(K))             &kp LG(LC(K))             &kp LG(LC(L))             &kp LC(LS(LG(SEMICOLON)))  &none
&none      &kp LG(LC(Z))         &none                 &none                 &none                 &none                         &none      &none                            &none                     &none                     &kp UP_ARROW              &none                     &kp LG(LC(LS(Z)))          &none
&none      &none                 &none                 &none                 &none                                 &none  &none  &none      &none  &none  &none                                        &kp LEFT_ARROW            &kp DOWN                  &kp RIGHT                 &none                      &none
            >;
        };

        mod {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none                                                  &trans                  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &bootloader                                            &bootloader             &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &none        &none  &none      &bt BT_CLR  &none       &rgb_ug RGB_MEFS_CMD 5  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &macro_ver    &none                             &none      &none                                           &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none                       &none        &none  &none      &none       &bl BL_TOG  &rgb_ug RGB_TOG                &bl BL_INC  &bl BL_DEC  &none  &none  &none
            >;
        };

        keypad {
            bindings = <
&kp EQUAL  &kp N1     &kp N2    &kp N3    &kp N4     &kp N5  &trans                                                   &mo 6      &kp N6  &kp KP_NUM  &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY  &kp MINUS
&kp TAB    &kp Q      &kp W     &kp E     &kp R      &kp T   &none                                                    &none      &kp Y   &kp KP_N7   &kp KP_N8     &kp KP_N9      &kp KP_MINUS     &kp BSLH
&kp ESC    &kp A      &kp S     &kp D     &kp F      &kp G   &none     &kp LCTRL  &kp LALT      &kp LGUI   &kp RCTRL  &none      &kp H   &kp KP_N4   &kp KP_N5     &kp KP_N6      &kp KP_PLUS      &kp SQT
&kp LSHFT  &kp Z      &kp X     &kp C     &kp V      &kp B                        &kp HOME      &kp PG_UP                        &kp N   &kp KP_N1   &kp KP_N2     &kp KP_N3      &kp KP_ENTER     &kp RSHFT
&mo 0      &kp GRAVE  &kp CAPS  &kp LEFT  &kp RIGHT          &kp BSPC  &kp DEL    &kp END       &kp PG_DN  &kp ENTER  &kp KP_N0          &kp UP      &kp DOWN      &kp KP_DOT     &kp RBKT         &mo 0
            >;
        };
    };
};
